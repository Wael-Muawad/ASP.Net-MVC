// <auto-generated />
using System;
using FinalProject_201810088.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject_201810088.Migrations
{
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject_201810088.Models.Drawer", b =>
                {
                    b.Property<int>("DrawerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CostPerManga")
                        .HasColumnType("float");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrawerId");

                    b.ToTable("Drawers");

                    b.HasData(
                        new
                        {
                            DrawerId = 1,
                            CostPerManga = 120.0,
                            EmailAddress = "Drawer1@gmail.com",
                            Name = "Sui Ishida",
                            PhoneNumber = "+962779783215",
                            ProfilePicture = "/Images/Drawer.jpg"
                        },
                        new
                        {
                            DrawerId = 2,
                            CostPerManga = 70.0,
                            EmailAddress = "Drawer2@gmail.com",
                            Name = "Eiichiro Oda",
                            PhoneNumber = "+962779783220",
                            ProfilePicture = "/Images/Drawer.jpg"
                        },
                        new
                        {
                            DrawerId = 3,
                            CostPerManga = 35.0,
                            EmailAddress = "Drawer3@gmail.com",
                            Name = "Gosho Aoyama",
                            PhoneNumber = "+962779783235",
                            ProfilePicture = "/Images/Drawer.jpg"
                        },
                        new
                        {
                            DrawerId = 4,
                            CostPerManga = 40.0,
                            EmailAddress = "Drawer4@gmail.com",
                            Name = "Akira Toriyama",
                            PhoneNumber = "+962779783240",
                            ProfilePicture = "/Images/Drawer.jpg"
                        },
                        new
                        {
                            DrawerId = 5,
                            CostPerManga = 55.0,
                            EmailAddress = "Drawer5@gmail.com",
                            Name = "Tsugumi Ohba",
                            PhoneNumber = "+962779783255",
                            ProfilePicture = "/Images/Drawer.jpg"
                        });
                });

            modelBuilder.Entity("FinalProject_201810088.Models.Manga", b =>
                {
                    b.Property<int>("MangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("CoverImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NoOfEpisodes")
                        .HasColumnType("int");

                    b.HasKey("MangaId");

                    b.ToTable("Mangas");

                    b.HasData(
                        new
                        {
                            MangaId = 1,
                            Description = "it is a 24 Episodes anime",
                            Name = "Tokyo Ghoul",
                            NoOfEpisodes = 24
                        },
                        new
                        {
                            MangaId = 2,
                            Description = "it is a 32 Episodes anime",
                            Name = "One Piece",
                            NoOfEpisodes = 32
                        },
                        new
                        {
                            MangaId = 3,
                            Description = "it is a 40 Episodes anime",
                            Name = "Detective Conan",
                            NoOfEpisodes = 40
                        },
                        new
                        {
                            MangaId = 4,
                            Description = "it is a 60 Episodes anime",
                            Name = "Dragon Ball",
                            NoOfEpisodes = 60
                        },
                        new
                        {
                            MangaId = 5,
                            Description = "it is a 12 Episodes anime",
                            Name = "Death Note",
                            NoOfEpisodes = 12
                        });
                });

            modelBuilder.Entity("FinalProject_201810088.Models.Work", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AirsAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DrawerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MangaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("WorkId");

                    b.HasIndex("DrawerId");

                    b.HasIndex("MangaId");

                    b.ToTable("Works");

                    b.HasData(
                        new
                        {
                            WorkId = 1,
                            AirsAt = new DateTime(2022, 1, 18, 6, 39, 43, 575, DateTimeKind.Local).AddTicks(3985),
                            DrawerId = 1,
                            EndDate = new DateTime(2022, 1, 16, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(2645),
                            MangaId = 1,
                            StartDate = new DateTime(2022, 1, 11, 1, 39, 43, 558, DateTimeKind.Local).AddTicks(2752),
                            Status = 0
                        },
                        new
                        {
                            WorkId = 2,
                            AirsAt = new DateTime(2022, 1, 18, 9, 39, 43, 575, DateTimeKind.Local).AddTicks(6071),
                            DrawerId = 2,
                            EndDate = new DateTime(2022, 1, 20, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6061),
                            MangaId = 2,
                            StartDate = new DateTime(2022, 1, 17, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6032),
                            Status = 2
                        },
                        new
                        {
                            WorkId = 3,
                            AirsAt = new DateTime(2022, 1, 17, 22, 39, 43, 575, DateTimeKind.Local).AddTicks(6091),
                            DrawerId = 3,
                            EndDate = new DateTime(2022, 1, 28, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6085),
                            MangaId = 3,
                            StartDate = new DateTime(2022, 1, 25, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6079),
                            Status = 1
                        },
                        new
                        {
                            WorkId = 4,
                            AirsAt = new DateTime(2022, 1, 18, 3, 39, 43, 575, DateTimeKind.Local).AddTicks(6109),
                            DrawerId = 3,
                            EndDate = new DateTime(2022, 2, 2, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6103),
                            MangaId = 1,
                            StartDate = new DateTime(2022, 1, 25, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6098),
                            Status = 0
                        },
                        new
                        {
                            WorkId = 5,
                            AirsAt = new DateTime(2022, 1, 18, 2, 39, 43, 575, DateTimeKind.Local).AddTicks(6129),
                            DrawerId = 1,
                            EndDate = new DateTime(2022, 2, 2, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6121),
                            MangaId = 3,
                            StartDate = new DateTime(2022, 1, 13, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6115),
                            Status = 1
                        },
                        new
                        {
                            WorkId = 6,
                            AirsAt = new DateTime(2022, 1, 18, 5, 39, 43, 575, DateTimeKind.Local).AddTicks(6147),
                            DrawerId = 4,
                            EndDate = new DateTime(2022, 2, 1, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6141),
                            MangaId = 4,
                            StartDate = new DateTime(2022, 1, 11, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6136),
                            Status = 1
                        },
                        new
                        {
                            WorkId = 7,
                            AirsAt = new DateTime(2022, 1, 18, 8, 39, 43, 575, DateTimeKind.Local).AddTicks(6164),
                            DrawerId = 5,
                            EndDate = new DateTime(2022, 1, 21, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6159),
                            MangaId = 4,
                            StartDate = new DateTime(2022, 1, 16, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6153),
                            Status = 2
                        },
                        new
                        {
                            WorkId = 8,
                            AirsAt = new DateTime(2022, 1, 18, 6, 39, 43, 575, DateTimeKind.Local).AddTicks(6182),
                            DrawerId = 1,
                            EndDate = new DateTime(2022, 1, 15, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6176),
                            MangaId = 5,
                            StartDate = new DateTime(2022, 1, 10, 1, 39, 43, 575, DateTimeKind.Local).AddTicks(6171),
                            Status = 0
                        });
                });

            modelBuilder.Entity("FinalProject_201810088.Models.Work", b =>
                {
                    b.HasOne("FinalProject_201810088.Models.Drawer", "Drawer")
                        .WithMany("Works")
                        .HasForeignKey("DrawerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject_201810088.Models.Manga", "Manga")
                        .WithMany("Works")
                        .HasForeignKey("MangaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drawer");

                    b.Navigation("Manga");
                });

            modelBuilder.Entity("FinalProject_201810088.Models.Drawer", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("FinalProject_201810088.Models.Manga", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
